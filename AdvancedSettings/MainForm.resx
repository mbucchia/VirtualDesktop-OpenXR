<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>